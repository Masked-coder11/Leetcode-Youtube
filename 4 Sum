class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n= nums.size();
        vector<vector<int>>ans;

        sort(nums.begin(), nums.end());
        int i=0;
        while(i<n){
            int j=i+1;
            
            while(j<n){
                int k=j+1, l=n-1;
                while(k<l){
                    long long sum = nums[i]+nums[j];
                    sum+=nums[k]+nums[l];

                    if(sum==target){
                        ans.push_back({nums[i], nums[j], nums[k], nums[l]});
                        k++;
                        l--;
                        while(k<l && nums[k]==nums[k-1]) k++;
                        while(k<l && nums[l]==nums[l+1]) l--;
                    }
                    else if(sum<target){
                        k++;
                        while(k<l && nums[k]==nums[k-1]) k++;
                    }
                    else{
                        l--;
                        while(k<l && nums[l]==nums[l+1]) l--;
                    }
                }
                j++;
                while(j<n && nums[j]==nums[j-1]) j++;

            }
            i++;
            while(i<n && nums[i]==nums[i-1]) i++;
        }
        return ans;
        
    }
};
