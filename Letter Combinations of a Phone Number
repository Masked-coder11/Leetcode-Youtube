class Solution {
public:
    void helper(int ind, string curr, string &digits, vector<string> &ans, unordered_map<char, string>mp){
        if(ind==digits.length()) {
            ans.push_back(curr);
            return;
        }

        for(auto it: mp[digits[ind]]){
            helper(ind+1, curr+it, digits, ans, mp);
        }

        return;
    }

    vector<string> letterCombinations(string digits) {
        unordered_map<char, string> mp = {
            {'2', "abc"}, {'3', "def"},  {'4', "ghi"}, {'5', "jkl"},
            {'6', "mno"}, {'7', "pqrs"}, {'8', "tuv"}, {'9', "wxyz"}};
        
        int n=digits.length();
        if(n==0) return {};

        vector<string>ans;

        helper(0, "", digits, ans, mp);

        return ans;
    }
};
